package com.mycompany.ericklemeprojetoindividual;

import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.awt.Color;


public class InfoComputador extends javax.swing.JFrame {
    //Variáveis para salvar os valores máximo, mínimo e médio da CPU
    Integer cpuMaximo = 0;
    Integer cpuMinimo = 100;
    Double cpuMedia = 0.0;
    
    //Variáveis para salvar os valores máximo, mínimo e médio da Memória
    Integer memoriaMaximo = 0;
    Integer memoriaMinimo = 100;
    Double memoriaMedia = 0.0;
    
    //Variáveis para salvar os valores máximo, mínimo e médio do Disco
    Integer discoMaximo = 0;
    Integer discoMinimo = 100;
    Double discoMedia = 0.0;
    
    //Contador de quantas leituras foram feitas
    Integer cont = 0;

    /**
     * Creates new form InfoComputador
     */
    public InfoComputador() {
        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
                    } catch (ClassNotFoundException ex) {
            Logger.getLogger(InfoComputador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(InfoComputador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(InfoComputador.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(InfoComputador.class.getName()).log(Level.SEVERE, null, ex);
        }
        Color myColor = new Color(80,80,80);
        getContentPane().setBackground(myColor);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAtualCpu = new javax.swing.JLabel();
        lblAtualDisco = new javax.swing.JLabel();
        lblAtualMemoria = new javax.swing.JLabel();
        pgbCpu = new javax.swing.JProgressBar();
        pgbDisco = new javax.swing.JProgressBar();
        pgbMemoria = new javax.swing.JProgressBar();
        btnFazerLeitura = new javax.swing.JButton();
        lblMaxCpu = new javax.swing.JLabel();
        lblMaxDisco = new javax.swing.JLabel();
        lblMaxMemoria = new javax.swing.JLabel();
        lblMinCpu = new javax.swing.JLabel();
        lblMinDisco = new javax.swing.JLabel();
        lblMinMemoria = new javax.swing.JLabel();
        lblMediaCpu = new javax.swing.JLabel();
        lblMediaDisco = new javax.swing.JLabel();
        lblMediaMemoria = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblContador = new javax.swing.JLabel();
        lblResultadoAtualCpu = new javax.swing.JLabel();
        lblResultadoAtualDisco = new javax.swing.JLabel();
        lblResultadoAtualMemoria = new javax.swing.JLabel();
        lblResultadoMaxCpu = new javax.swing.JLabel();
        lblResultadoMinCpu = new javax.swing.JLabel();
        lblResultadoMinCpu1 = new javax.swing.JLabel();
        lblResultadoMaxDisco = new javax.swing.JLabel();
        lblResultadoMinDisco = new javax.swing.JLabel();
        lblResultadoMediaDisco = new javax.swing.JLabel();
        lblResultadoMaxMemoria = new javax.swing.JLabel();
        lblResultadoMinMemoria = new javax.swing.JLabel();
        lblResultadoMediaMemoria = new javax.swing.JLabel();
        lblContadorVezes = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblBarraMinCpu = new javax.swing.JLabel();
        lblBarraMaxCpu = new javax.swing.JLabel();
        lblBarraMaxMemoria = new javax.swing.JLabel();
        lblBarraMinDisco = new javax.swing.JLabel();
        lblBarraMinMemoria = new javax.swing.JLabel();
        lblBarraMaxDisco = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.blue);

        lblAtualCpu.setForeground(new java.awt.Color(0, 156, 173));
        lblAtualCpu.setText("Atual");

        lblAtualDisco.setForeground(new java.awt.Color(227, 198, 9));
        lblAtualDisco.setText("Atual");

        lblAtualMemoria.setForeground(new java.awt.Color(41, 163, 51));
        lblAtualMemoria.setText("Atual");

        pgbCpu.setForeground(new java.awt.Color(0, 156, 173));

        pgbDisco.setForeground(new java.awt.Color(227, 198, 9));

        pgbMemoria.setForeground(new java.awt.Color(41, 163, 51));

        btnFazerLeitura.setText("Fazer leitura");
        btnFazerLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFazerLeituraActionPerformed(evt);
            }
        });

        lblMaxCpu.setForeground(new java.awt.Color(0, 156, 173));
        lblMaxCpu.setText("Max");

        lblMaxDisco.setForeground(new java.awt.Color(227, 198, 9));
        lblMaxDisco.setText("Max");

        lblMaxMemoria.setForeground(new java.awt.Color(41, 163, 51));
        lblMaxMemoria.setText("Max");

        lblMinCpu.setForeground(new java.awt.Color(0, 156, 173));
        lblMinCpu.setText("Min");

        lblMinDisco.setForeground(new java.awt.Color(227, 198, 9));
        lblMinDisco.setText("Min");

        lblMinMemoria.setForeground(new java.awt.Color(41, 163, 51));
        lblMinMemoria.setText("Min");

        lblMediaCpu.setForeground(new java.awt.Color(0, 156, 173));
        lblMediaCpu.setText("Média");

        lblMediaDisco.setForeground(new java.awt.Color(227, 198, 9));
        lblMediaDisco.setText("Média");

        lblMediaMemoria.setForeground(new java.awt.Color(41, 163, 51));
        lblMediaMemoria.setText("Média");

        jLabel10.setToolTipText("");

        lblContador.setText("Contador:");

        lblResultadoAtualCpu.setText("...");

        lblResultadoAtualDisco.setText("...");

        lblResultadoAtualMemoria.setText("...");

        lblResultadoMaxCpu.setText("...");

        lblResultadoMinCpu.setText("...");

        lblResultadoMinCpu1.setText("...");

        lblResultadoMaxDisco.setText("...");

        lblResultadoMinDisco.setText("...");

        lblResultadoMediaDisco.setText("...");

        lblResultadoMaxMemoria.setText("...");

        lblResultadoMinMemoria.setText("...");

        lblResultadoMediaMemoria.setText("...");

        lblContadorVezes.setText("0");

        jLabel1.setForeground(new java.awt.Color(227, 198, 9));
        jLabel1.setText("Disco");

        jLabel2.setForeground(new java.awt.Color(0, 156, 173));
        jLabel2.setText("CPU");

        jLabel3.setForeground(new java.awt.Color(41, 163, 51));
        jLabel3.setText("Memória");

        lblBarraMinCpu.setText("0");

        lblBarraMaxCpu.setText("100");

        lblBarraMaxMemoria.setText("100");

        lblBarraMinDisco.setText("0");

        lblBarraMinMemoria.setText("0");

        lblBarraMaxDisco.setText("100");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pgbCpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAtualCpu)
                            .addComponent(lblMaxCpu)
                            .addComponent(lblMinCpu)
                            .addComponent(lblMediaCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblResultadoMinCpu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblResultadoMaxCpu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblResultadoAtualCpu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblResultadoMinCpu1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBarraMinCpu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblBarraMaxCpu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pgbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBarraMinDisco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblBarraMaxDisco))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAtualDisco)
                            .addComponent(lblMaxDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMediaDisco)
                            .addComponent(lblMinDisco))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblResultadoMaxDisco)
                            .addComponent(lblResultadoAtualDisco)
                            .addComponent(lblResultadoMinDisco))))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblBarraMinMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblBarraMaxMemoria))
                        .addComponent(pgbMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblMinMemoria)
                                .addComponent(lblMediaMemoria))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblResultadoMinMemoria, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblResultadoMediaMemoria, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblMaxMemoria)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblResultadoMaxMemoria))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAtualMemoria)
                            .addGap(39, 39, 39)
                            .addComponent(lblResultadoAtualMemoria))))
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel2)
                .addGap(157, 157, 157)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblResultadoMediaDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(lblContador)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblContadorVezes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(btnFazerLeitura)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pgbCpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pgbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pgbMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBarraMinCpu)
                                    .addComponent(lblBarraMaxCpu)
                                    .addComponent(lblBarraMaxMemoria)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblBarraMinMemoria)
                                        .addComponent(lblBarraMaxDisco)))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAtualMemoria)
                                    .addComponent(lblAtualDisco)
                                    .addComponent(lblAtualCpu)
                                    .addComponent(lblResultadoAtualCpu)
                                    .addComponent(lblResultadoAtualDisco)
                                    .addComponent(lblResultadoAtualMemoria))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMaxCpu)
                                    .addComponent(lblMaxDisco)
                                    .addComponent(lblMaxMemoria)
                                    .addComponent(lblResultadoMaxCpu)
                                    .addComponent(lblResultadoMaxDisco)
                                    .addComponent(lblResultadoMaxMemoria))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMinDisco)
                                    .addComponent(lblMinCpu)
                                    .addComponent(lblMinMemoria)
                                    .addComponent(lblResultadoMinCpu)
                                    .addComponent(lblResultadoMinDisco)
                                    .addComponent(lblResultadoMinMemoria))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMediaCpu)
                                    .addComponent(lblMediaDisco)
                                    .addComponent(lblMediaMemoria)
                                    .addComponent(lblResultadoMinCpu1)
                                    .addComponent(lblResultadoMediaDisco)
                                    .addComponent(lblResultadoMediaMemoria)))
                            .addComponent(lblBarraMinDisco))
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)))
                .addGap(19, 19, 19)
                .addComponent(btnFazerLeitura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContador)
                    .addComponent(lblContadorVezes))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFazerLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFazerLeituraActionPerformed
        
        //Adiciona uma nova leitura ao contador de leituras
        cont += 1;

        //Gerador dos números randômicos
        Random numeroAleatorio = new Random();
        
        //Salva o número randômico gerado em cada varíavel
        Integer numeroCpu = numeroAleatorio.nextInt(101);
        Integer numeroMemoria = numeroAleatorio.nextInt(101);
        Integer numeroDisco = numeroAleatorio.nextInt(101);

        //Salva os valores da CPU
        if (numeroCpu > cpuMaximo) {
            cpuMaximo = numeroCpu;
        }
        if (numeroCpu < cpuMinimo) {
            cpuMinimo = numeroCpu;
        }
        cpuMedia = (cpuMedia + numeroCpu);
        Double mediaCpu = cpuMedia / cont;
        
        //Salva os valores da Memória
        if (numeroMemoria > memoriaMaximo) {
            memoriaMaximo = numeroMemoria;
        }
        if (numeroMemoria < memoriaMinimo) {
            memoriaMinimo = numeroMemoria;
        }
        discoMedia = (discoMedia + numeroDisco);
        Double mediaDisco = discoMedia / cont;
        
        //Salva os valores do Disco
        if (numeroDisco > discoMaximo) {
            discoMaximo = numeroDisco;
        }
        if (numeroDisco < discoMinimo) {
            discoMinimo = numeroDisco;
        }
        memoriaMedia = (memoriaMedia + numeroMemoria);
        Double mediaMemoria = memoriaMedia / cont;

        //Exibe os valores para CPU
        lblResultadoAtualCpu.setText(String.valueOf(numeroCpu));
        lblResultadoMaxCpu.setText(String.valueOf(cpuMaximo));
        lblResultadoMinCpu.setText(String.valueOf(cpuMinimo));
        lblResultadoMinCpu1.setText(String.valueOf(String.format("%.2f", (mediaCpu))));
        
        //Exibe os valores para Memória
        lblResultadoAtualMemoria.setText(String.valueOf(numeroMemoria));
        lblResultadoMaxMemoria.setText(String.valueOf(memoriaMaximo));
        lblResultadoMinMemoria.setText(String.valueOf(memoriaMinimo));
        lblResultadoMediaMemoria.setText(String.valueOf(String.format("%.2f", (mediaMemoria))));

        //Exibe os valores para Disco
        lblResultadoAtualDisco.setText(String.valueOf(numeroDisco));
        lblResultadoMaxDisco.setText(String.valueOf(discoMaximo));
        lblResultadoMinDisco.setText(String.valueOf(discoMinimo));
        lblResultadoMediaDisco.setText(String.valueOf(String.format("%.2f", (mediaDisco))));
        
        //Modifica a barra de progeresso de acordo com número randômico gerado
        pgbCpu.setValue(numeroCpu);
        pgbMemoria.setValue(numeroMemoria);
        pgbDisco.setValue(numeroDisco);

        //Exibe o valor do contador
        lblContadorVezes.setText(String.valueOf(cont));
    }//GEN-LAST:event_btnFazerLeituraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoComputador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoComputador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFazerLeitura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblAtualCpu;
    private javax.swing.JLabel lblAtualDisco;
    private javax.swing.JLabel lblAtualMemoria;
    private javax.swing.JLabel lblBarraMaxCpu;
    private javax.swing.JLabel lblBarraMaxDisco;
    private javax.swing.JLabel lblBarraMaxMemoria;
    private javax.swing.JLabel lblBarraMinCpu;
    private javax.swing.JLabel lblBarraMinDisco;
    private javax.swing.JLabel lblBarraMinMemoria;
    private javax.swing.JLabel lblContador;
    private javax.swing.JLabel lblContadorVezes;
    private javax.swing.JLabel lblMaxCpu;
    private javax.swing.JLabel lblMaxDisco;
    private javax.swing.JLabel lblMaxMemoria;
    private javax.swing.JLabel lblMediaCpu;
    private javax.swing.JLabel lblMediaDisco;
    private javax.swing.JLabel lblMediaMemoria;
    private javax.swing.JLabel lblMinCpu;
    private javax.swing.JLabel lblMinDisco;
    private javax.swing.JLabel lblMinMemoria;
    private javax.swing.JLabel lblResultadoAtualCpu;
    private javax.swing.JLabel lblResultadoAtualDisco;
    private javax.swing.JLabel lblResultadoAtualMemoria;
    private javax.swing.JLabel lblResultadoMaxCpu;
    private javax.swing.JLabel lblResultadoMaxDisco;
    private javax.swing.JLabel lblResultadoMaxMemoria;
    private javax.swing.JLabel lblResultadoMediaDisco;
    private javax.swing.JLabel lblResultadoMediaMemoria;
    private javax.swing.JLabel lblResultadoMinCpu;
    private javax.swing.JLabel lblResultadoMinCpu1;
    private javax.swing.JLabel lblResultadoMinDisco;
    private javax.swing.JLabel lblResultadoMinMemoria;
    private javax.swing.JProgressBar pgbCpu;
    private javax.swing.JProgressBar pgbDisco;
    private javax.swing.JProgressBar pgbMemoria;
    // End of variables declaration//GEN-END:variables
}
